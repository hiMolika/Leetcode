# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeNthFromEnd(self, head, n):
        dummy = ListNode(0,head)
        slow = dummy
        fast = dummy

        # move fast pointer n steps ahead
        for _ in range(n):
            fast = fast.next

        # move both slow and fast pointer together until fast reaches last node
        while fast.next:
            slow = slow.next
            fast = fast.next
        
        # skip the nth node 
        slow.next = slow.next.next

        return dummy.next # return the new head
